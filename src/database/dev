Byte19LogDatabase

## 데이터베이스를 별도 프로세스로 분리, 소켓통신
Append 스트림?
Read 스트림?
요청/응답패턴?

연결, 연결 관리, 재시도, 앱리로드, 데이터베이스리로드

불필요 복잡성


## 쓰기 및 읽기 체크 (세그먼트 안에서도 더 살려보자)
utf8 에서 힌트, 배치마다 길이정보를 시작부에 집어넣을까? 그리고 배치단위로 읽어? 이후 동기 프로세싱은 루프 레이턴시 고려해서 더 작게 처리하고

페이지 개념 도입?

비트단위의 끈김은 버려

## 압축
공간절약 <-> 쓰기, 읽기에 오버해드 발생

- 세그먼트 단위로 타임스템프를 더 압축할 수 있음. (6 -> 4 바이트)

- 배치 단위로 정합성을 따진다면 타임스템프를 세그먼트 단위보다 더 압축할 여지도 생김. (6 -> 3|2 바이트)
배치 시작부에 갯수 넣을때 시간을 넣고 이후 데이터에는 기준 시간으로붙터 추가된 만큼만 넣으면...
배치 5분이면 3바이트
배치 1분이면 2바이트

24시간 86400000 ms
5분 300000 ms
1분 60000 ms

1바이트로 255
2바이트로 65535
3바이트로 16777215
4바이트로 4294967295

- 데이터 워드 압축 (가변길이)
배치 단위로 정합성 따진다면 배치 단위로 압축 가능.

기기 address 워드, MCA 워드 처럼 거의 변화가 없는 데이터를 압축, 한번 저장하고 변화 없으면 생략.
가변길이는 데이터 시작부분에 1 바이트 추가해서 해당 바이트에 압축정보를 담기
(4 -> 1 바이트)
  
sp 워드, 주행관련 워드 등도 복잡성이 높지만 압축할 여지 있긴함.




# 벡터 개념, 변화를 추적하는 방식으로 데이터를 수집하거나 압축하면 엄청나게 공간을 절약할 수 있을것임.
초당 5회 정도 시리얼데이터 셋을 수집하지만
거의 수초 ~ 수분까지
또는 어떤 부분은 수시간까지 변화가 없는 경우가 있음.
그런것들의 변화가 있을때만, 그리고 변화 내용만을 데이터로 보관한다면?
(정합성 체크 및 부정합시 처리기능이 필수)