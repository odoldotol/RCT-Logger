# 마운트 언마운트
udev 규칙 등을 이용하여 처리하는것 보다
서버에서 처리하는게 더 좋다고 결론.
(어차피 언마운트는 서버에서 해야하고 마운트 위치 또한 어차피 서버가 반드시 알아야하기 때문)

유저가 USB 를 삽입하고 제거하는 동작과 아래 서버의 동작들을 안전하게 풀어야함.
그리고 유저는 복수의 USB 를 연결할 수도 있음.
- 마운트 포인트 만들기(mkdir)
- 마운트하기(mount)
- 스토리지 루트에 쓰기권한 주고 rct_log 폴더 만들기
- 스토리지의 루트 디렉토리 혹은 rct_log 디렉토리에 download.txt 파일 있는지 검사하고 있으면 읽기
- DB 에서 데이터 읽어서 엑셀로 변환하고 rct_log 에 쓰기
- 마운트 해제하기(umount)
- 마운트 포인트 삭제하기(rmdir)

# 마운트 포인트 안정성
Udev 가 DEVNAME, Kernel Name 등을 중복없게 이벤트로 보내줌.
이를 바탕으로 마운트 포인트를 만들기 때문에 중복가능성은 없음.
혹시나 문제가 생겨도 오버레이파일시스템을 사용하면 재부팅시 모든 마운트포인트는 사라질것.
서버는 위와같은 일을 고려함.


# 복수의 USB
초기에 다수의 USB 스토리지를 처리할 수 있도록 디자인하였으나 하나만 처리해도 충분, 다수 처리는 불필요.
때문에 하나의 USB 스토리지 연결만 처리함. 2 이상의 연결부터는 무시함.

# 파일명
YYYY_MM_DD.xlsx
이미 존재할시 덮어씀.

# download.txt
다운로드 할 날짜를 서버에 알려줄 수 있는 파일.
각 날짜 표현은 줄바꿈 또는 콤마로 구분.

- 숫자 8개로 표현: 단일 날짜. 예) 20250325
- 단일날짜-단일날짜: 두 날짜를 포함하고 두 날짜 사이의 날짜를 모두 포함. 예) 20241101-20251325
- 3자리 미만의 숫자 n: 오늘을 포함해서 최근 n 날짜를 뜻함. 예) 15
- *: 다운로드 가능한 모든 날짜.

중복된 날짜는 한번만 다운로드함.
파일이 존재하지 않거나 아무값이 없거나 알맞지 않는 형식일시 기본값: 10

# server.log
서버의 모든 로그들을 다운로드한 폴더

# 만약 인식도 못하고 다운로드도 안하고 먹통이면 로거를 재부팅해야함.